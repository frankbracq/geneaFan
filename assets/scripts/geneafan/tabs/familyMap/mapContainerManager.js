class MapContainerManager {
    constructor() {
        this.currentContainer = null;
    }

    moveMapToContainer(containerId, map) {
        console.group('üó∫Ô∏è D√©placement de la carte vers le conteneur:', containerId);
    
        if (!map) {
            console.error('‚ùå Aucun instance de carte trouv√©e');
            console.groupEnd();
            return false;
        }
    
        const targetContainer = document.getElementById(containerId);
        if (!targetContainer) {
            console.error(`‚ùå Conteneur cible "${containerId}" introuvable`);
            console.groupEnd();
            return false;
        }
    
        try {
            const mapDiv = map.getDiv();
    
            console.log('Structure DOM actuelle:', {
                mapDivId: mapDiv.id,
                mapDivParentId: mapDiv.parentNode?.id,
                targetContainerId: targetContainer.id
            });
    
            // V√©rifier si la carte est d√©j√† dans le conteneur cible
            if (mapDiv.parentNode === targetContainer) {
                console.log('‚ÑπÔ∏è La carte est d√©j√† dans le bon conteneur.');
                console.groupEnd();
                return true; // Aucun d√©placement n√©cessaire
            }
    
            // Nettoyer le conteneur cible
            console.log('üßπ Nettoyage du conteneur cible');
            targetContainer.innerHTML = '';
    
            // D√©placer la carte
            console.log('üì• D√©placement de la carte');
            mapDiv.style.width = '100%';
            mapDiv.style.height = '100%';
            targetContainer.appendChild(mapDiv);
    
            // D√©clencher un redimensionnement
            console.log('üìê Redimensionnement de la carte');
            google.maps.event.trigger(map, 'resize');
    
            console.log('‚úÖ Carte d√©plac√©e avec succ√®s');
            console.groupEnd();
            return true;
    
        } catch (error) {
            console.error('‚ùå Erreur lors du d√©placement de la carte:', error);
            console.groupEnd();
            return false;
        }
    }
    

    reset() {
        this.currentContainer = null;
    }
}

export const mapContainerManager = new MapContainerManager();